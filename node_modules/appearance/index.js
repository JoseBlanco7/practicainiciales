(function() {
  var Appearance = (function() {
    var Appearance = function(spectra) {
      this.spectra = spectra;
    };

    Appearance.selectors = {
      font: ['font'],
      altFont: ['alt-font'],
      accentColor: ['accent-color', 'accent-border-color', 'accent-stroke-color', 'accent-background-color',
        'accent-hover-background-color', 'accent-background-color-contrast-color', 'accent-hover-color',
        'accent-tinted-background-color', 'accent-tinted-background-color-contrast-color']
    };

    Appearance.defaults = {
      font: 'Sintony',
      altFont: 'Sintony',
      accentColor: '#111111'
    };

    Appearance.prototype.generateAppearanceSelectors = function(appearance, allSelectors) {
      var _this = this,
        value, color, generatedSelectors, property;

      return Object.keys(Appearance.selectors).reduce(function(arr, selector) {
        Appearance.selectors[selector].forEach(function(label) {
          generatedSelectors = allSelectors[label];
          value = appearance[selector] || Appearance.defaults[selector];

          if (label.indexOf('tinted') != -1) {
            color = _this.spectra(value);
            value = color.mix(_this.spectra('white'), 80);
            if (label.indexOf('background-color') != -1) {
              property = 'background-color';
            } else {
              property = 'color';
            }
          } else if (label.indexOf('hover') != -1) {
            color = _this.spectra(value);
            value = color.isLight() ? color.darken(10).hex() : color.lighten(10).hex();
            if (label.indexOf('background-color') != -1) {
              property = 'background-color';
            } else {
              property = 'color';
            }
          } else if (label.indexOf('contrast-color') != -1) {
            color = _this.spectra(value);
            value = color.isLight() ? '#111' : '#fff';
            property = 'color';
          } else if (label.indexOf('background') != -1) {
            property = 'background-color';
          } else if (label.indexOf('stroke') != -1) {
            property = 'stroke';
          } else if (label.indexOf('border') != -1) {
            property = 'border-color';
          } else if (label.indexOf('font') != -1) {
            property = 'font-family';
            value += ', sans-serif';
          } else {
            property = 'color';
          }

          if (generatedSelectors && property) {
            arr.push(generatedSelectors + ' { ' + property + ': ' + value + '; }');
          }
        });

        return arr;
      }, []);
    };

    return Appearance;
  })();

  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {
    module.exports = Appearance;
  } else {
    window.Appearance = Appearance;
  }
})();
